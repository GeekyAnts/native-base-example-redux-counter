{"version":3,"sources":["../../../../src/basic/Tabs/ScrollableTabBar.js"],"names":["React","require","ReactNative","View","Animated","StyleSheet","ScrollView","Platform","Dimensions","Button","WINDOW_WIDTH","get","width","ScrollableTabBar","createClass","propTypes","goToPage","PropTypes","func","activeTab","number","tabs","array","backgroundColor","string","activeTextColor","inactiveTextColor","scrollOffset","style","tabStyle","tabsContainerStyle","renderTab","underlineStyle","onScroll","contextTypes","theme","object","getDefaultProps","getInitialState","_tabsMeasurements","_leftTabUnderline","Value","_widthTabUnderline","_containerWidth","componentDidMount","props","scrollValue","addListener","updateView","offset","position","Math","floor","value","pageOffset","tabCount","length","lastTabPosition","necessarilyMeasurementsCompleted","updateTabPanel","updateTabUnderline","isLastTab","_tabContainerMeasurements","_containerMeasurements","containerWidth","tabWidth","nextTabMeasurements","nextTabWidth","tabOffset","left","absolutePageOffset","newScrollX","OS","_scrollView","scrollTo","x","y","animated","rightBoundScroll","lineLeft","lineRight","right","nextTabLeft","nextTabRight","newLineLeft","newLineRight","state","setValue","name","page","isTabActive","onPressHandler","onLayoutHandler","activeTabStyle","textStyle","activeTextStyle","tabHeaderStyle","headerContent","children","undefined","textColor","fontWeight","random","measureTab","event","nativeEvent","layout","height","_value","render","variables","context","tabUnderlineStyle","topTabBarActiveBorderColor","bottom","dynamicTabUnderline","styles","container","onContainerLayout","scrollView","onTabContainerLayout","map","bind","componentWillReceiveProps","nextProps","JSON","stringify","setState","e","StyledTab","mapPropsToStyleNames","ScrollableTab","create","tab","alignItems","justifyContent","paddingLeft","paddingRight","borderWidth","borderTopWidth","borderLeftWidth","borderRightWidth","borderColor","flexDirection"],"mappings":"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","file":"ScrollableTabBar.js","sourcesContent":["const React = require('react');\nconst ReactNative = require('react-native');\nimport { connectStyle, StyleProvider } from '@shoutem/theme';\nimport variable from './../../theme/variables/platform';\nimport { TabHeading, Text, TabContainer } from './../../index';\nimport _ from 'lodash';\nconst {\n  View,\n  Animated,\n  StyleSheet,\n  ScrollView,\n  Platform,\n  Dimensions,\n} = ReactNative;\nconst Button = require('./Button');\n\nconst WINDOW_WIDTH = Dimensions.get('window').width;\n\nconst ScrollableTabBar = React.createClass({\n  propTypes: {\n    goToPage: React.PropTypes.func,\n    activeTab: React.PropTypes.number,\n    tabs: React.PropTypes.array,\n    backgroundColor: React.PropTypes.string,\n    activeTextColor: React.PropTypes.string,\n    inactiveTextColor: React.PropTypes.string,\n    scrollOffset: React.PropTypes.number,\n    style: View.propTypes.style,\n    tabStyle: View.propTypes.style,\n    tabsContainerStyle: View.propTypes.style,\n    renderTab: React.PropTypes.func,\n    underlineStyle: View.propTypes.style,\n    onScroll:React.PropTypes.func,\n  },\n  contextTypes: {\n    theme: React.PropTypes.object,\n  },\n\n  getDefaultProps() {\n    return {\n      scrollOffset: 52,\n      activeTextColor: 'navy',\n      inactiveTextColor: 'black',\n      backgroundColor: null,\n      style: {},\n      tabStyle: {},\n      tabsContainerStyle: {},\n      underlineStyle: {},\n    };\n  },\n\n  getInitialState() {\n    this._tabsMeasurements = [];\n    return {\n      _leftTabUnderline: new Animated.Value(0),\n      _widthTabUnderline: new Animated.Value(0),\n      _containerWidth: null,\n    };\n  },\n\n  componentDidMount() {\n    this.props.scrollValue.addListener(this.updateView);\n  },\n\n  updateView(offset) {\n    const position = Math.floor(offset.value);\n    const pageOffset = offset.value % 1;\n    const tabCount = this.props.tabs.length;\n    const lastTabPosition = tabCount - 1;\n\n    if (tabCount === 0 || offset.value < 0 || offset.value > lastTabPosition) {\n      return;\n    }\n\n    if (this.necessarilyMeasurementsCompleted(position, position === lastTabPosition)) {\n      this.updateTabPanel(position, pageOffset);\n      this.updateTabUnderline(position, pageOffset, tabCount);\n    }\n  },\n\n  necessarilyMeasurementsCompleted(position, isLastTab) {\n    return this._tabsMeasurements[position] &&\n      (isLastTab || this._tabsMeasurements[position + 1]) &&\n      this._tabContainerMeasurements &&\n      this._containerMeasurements;\n  },\n\n  updateTabPanel(position, pageOffset) {\n    const containerWidth = this._containerMeasurements.width;\n    const tabWidth = this._tabsMeasurements[position].width;\n    const nextTabMeasurements = this._tabsMeasurements[position + 1];\n    const nextTabWidth = nextTabMeasurements && nextTabMeasurements.width || 0;\n    const tabOffset = this._tabsMeasurements[position].left;\n    const absolutePageOffset = pageOffset * tabWidth;\n    let newScrollX = tabOffset + absolutePageOffset;\n\n    // center tab and smooth tab change (for when tabWidth changes a lot between two tabs)\n    newScrollX -= (containerWidth - (1 - pageOffset) * tabWidth - pageOffset * nextTabWidth) / 2;\n    newScrollX = newScrollX >= 0 ? newScrollX : 0;\n\n    if (Platform.OS === 'android') {\n      this._scrollView.scrollTo({x: newScrollX, y: 0, animated: false, });\n    } else {\n      const rightBoundScroll = this._tabContainerMeasurements.width - (this._containerMeasurements.width);\n      newScrollX = newScrollX > rightBoundScroll ? rightBoundScroll : newScrollX;\n      this._scrollView.scrollTo({x: newScrollX, y: 0, animated: false, });\n    }\n\n  },\n\n  updateTabUnderline(position, pageOffset, tabCount) {\n    const lineLeft = this._tabsMeasurements[position].left;\n    const lineRight = this._tabsMeasurements[position].right;\n\n    if (position < tabCount - 1) {\n      const nextTabLeft = this._tabsMeasurements[position + 1].left;\n      const nextTabRight = this._tabsMeasurements[position + 1].right;\n\n      const newLineLeft = (pageOffset * nextTabLeft + (1 - pageOffset) * lineLeft);\n      const newLineRight = (pageOffset * nextTabRight + (1 - pageOffset) * lineRight);\n\n      this.state._leftTabUnderline.setValue(newLineLeft);\n      this.state._widthTabUnderline.setValue(newLineRight - newLineLeft);\n    } else {\n      this.state._leftTabUnderline.setValue(lineLeft);\n      this.state._widthTabUnderline.setValue(lineRight - lineLeft);\n    }\n  },\n\n  renderTab(name, page, isTabActive, onPressHandler, onLayoutHandler, tabStyle, activeTabStyle, textStyle, activeTextStyle, tabHeaderStyle) {\n    const headerContent = (typeof name!=='string') ? name.props.children : undefined;\n    const { activeTextColor, inactiveTextColor } = this.props;\n    const textColor = isTabActive ? activeTextColor : inactiveTextColor;\n    const fontWeight = isTabActive ? 'bold' : 'normal';\n\n    if (typeof name==='string') {\n      return <Button\n        key={`${name}_${page}`}\n        onPress={() => onPressHandler(page)}\n        onLayout={onLayoutHandler}\n      >\n        <TabHeading scrollable style={(isTabActive) ? activeTabStyle : tabStyle} active={isTabActive}>\n          <Text style={(isTabActive) ? activeTextStyle : textStyle}>\n            {name}\n          </Text>\n        </TabHeading>\n      </Button>;\n    }\n    else {\n      return <Button\n        key={_.random(1.2, 5.2)}\n        onPress={() => onPressHandler(page)}\n        >\n        <TabHeading scrollable style={tabHeaderStyle} active={isTabActive}>\n          {headerContent}\n        </TabHeading>\n      </Button>\n    }\n  },\n\n  measureTab(page, event) {\n    const { x, width, height, } = event.nativeEvent.layout;\n    this._tabsMeasurements[page] = {left: x, right: x + width, width, height, };\n    this.updateView({value: this.props.scrollValue._value, });\n  },\n\n  render() {\n    const variables = (this.context.theme) ? this.context.theme['@@shoutem.theme/themeStyle'].variables : variable;\n    const tabUnderlineStyle = {\n      position: 'absolute',\n      height: 4,\n      backgroundColor: variables.topTabBarActiveBorderColor,\n      bottom: 0\n    };\n\n    const dynamicTabUnderline = {\n      left: this.state._leftTabUnderline,\n      width: this.state._widthTabUnderline,\n    };\n\n    return <View\n      style={[styles.container, {backgroundColor: this.props.backgroundColor, }, this.props.style, ]}\n      onLayout={this.onContainerLayout}\n    >\n      <ScrollView\n        automaticallyAdjustContentInsets={false}\n        ref={(scrollView) => { this._scrollView = scrollView; }}\n        horizontal={true}\n        showsHorizontalScrollIndicator={false}\n        showsVerticalScrollIndicator={false}\n        directionalLockEnabled={true}\n        onScroll={this.props.onScroll}\n        bounces={false}\n        scrollsToTop={false}\n      >\n        <View\n          style={[styles.tabs, {width: this.state._containerWidth, }, this.props.tabsContainerStyle, ]}\n          ref={'tabContainer'}\n          onLayout={this.onTabContainerLayout}\n        >\n          {this.props.tabs.map((name, page) => {\n            const isTabActive = this.props.activeTab === page;\n            const renderTab = this.props.renderTab || this.renderTab;\n            return renderTab(name, page, isTabActive, this.props.goToPage, this.measureTab.bind(this, page), this.props.tabStyle[page], this.props.activeTabStyle[page], this.props.textStyle[page], this.props.activeTextStyle[page], this.props.tabHeaderStyle[page]);\n          })}\n          <Animated.View style={[tabUnderlineStyle, dynamicTabUnderline, this.props.underlineStyle, ]} />\n        </View>\n      </ScrollView>\n    </View>;\n  },\n\n  componentWillReceiveProps(nextProps) {\n    // If the tabs change, force the width of the tabs container to be recalculated\n    if (JSON.stringify(this.props.tabs) !== JSON.stringify(nextProps.tabs) && this.state._containerWidth) {\n      this.setState({ _containerWidth: null, });\n    }\n  },\n\n  onTabContainerLayout(e) {\n    this._tabContainerMeasurements = e.nativeEvent.layout;\n    let width = this._tabContainerMeasurements.width;\n    if (width < WINDOW_WIDTH) {\n      width = WINDOW_WIDTH;\n    }\n    this.setState({ _containerWidth: width, });\n    this.updateView({value: this.props.scrollValue._value, });\n  },\n\n  onContainerLayout(e) {\n    this._containerMeasurements = e.nativeEvent.layout;\n    this.updateView({value: this.props.scrollValue._value, });\n  },\n});\n\n// module.exports = ScrollableTabBar;\nconst StyledTab = connectStyle('NativeBase.ScrollableTab', {}, mapPropsToStyleNames)(ScrollableTabBar);\nexport {\n  StyledTab as ScrollableTab,\n};\nconst styles = StyleSheet.create({\n  tab: {\n    height: 49,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingLeft: 20,\n    paddingRight: 20,\n  },\n  container: {\n    height: 50,\n    borderWidth: 1,\n    borderTopWidth: 0,\n    borderLeftWidth: 0,\n    borderRightWidth: 0,\n    borderColor: '#ccc',\n  },\n  tabs: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n  },\n});\n"]}